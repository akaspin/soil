<!DOCTYPE html>
<html lang="en">
{% include head.erb %}

<body class="bg-default" class="bg-default">
<header id="header" class="landing">
  <nav class="row" role="navigation">
    <div class="col-md-2 col-md-offset-1">
      <a href="{{ site.baseurl }}/" class="logo">Soil</a>
    </div>

    <div class="col-md-8">
      <div class="pull-right">
        {% include sections.erb %}
      </div>
    </div>

  </nav>
</header>

<div class="row body landing">
  <div class="col-md-10 col-md-offset-1">
    <h1 id="soil">Soil</h1>
    <h4 id="behavioral-systemd-provision">Behavioral SystemD provision</h4>
  </div>
</div>

<hr>

<div class="row body landing">
  <div class="col-md-10 col-md-offset-1">
    <h2>Rules of war</h2>
  </div>
  <div class="col-md-5 col-md-offset-1">
    <p>Soil design is defined by battle requirements. It is designed for rapid and predictable deployments of complex systems like Kafka, Mesos or Kubernetes.</p>
    <p>All deployments are defined by behavioral schemas. Soil never touch unchanged entities.</p>
  </div>
  <div class="col-md-4 col-md-offset-1">
    <pre><code class="language-hcl">constraint {
  "${meta.rack}" = "1"
}
unit {
  update = "restart"
}</code></pre>
  </div>
</div>

<hr>
<div class="row body landing">
  <div class="col-md-10 col-md-offset-1">
    <h2>Born to survive</h2>
  </div>
  <div class="col-md-5 col-md-offset-1">
    <p>Soil agent is designed taking into account work in a toxic environment. You can restart the agent itself or machine, provide incorrect configuration or cluster that is not working. Soil will deal with this and maintain correct state. Hot-reload is included.</p>
    <p>All that an agent needs to work is SystemD socket. It can be deployed in unprivileged container.</p>
  </div>
  <div class="col-md-4 col-md-offset-1">
    <pre><code class="language-shell"># systemctl restart soil
$ curl http://host/v1/agent/drain
"ok"
</code></pre>
  </div>
</div>

<hr>

<div class="row body landing">
  <div class="col-md-10 col-md-offset-1">
    <h2>No magic</h2>
  </div>
  <div class="col-md-5 col-md-offset-1">
    <p>Soil is made as simple as possible. Single binary. No features except those that are absolutely necessary.</p>
    <p>No binary storage. Simple configuration in text files. State also stored in human-readable text format.</p>
    <p>Agents also provide a simple API for status and control.</p>
  </div>
  <div class="col-md-4 col-md-offset-1">
    <pre><code class="language-shell">$ curl http://host/v1/status/ping
"ok"
# systemctl cat pod-private-kafka
### POD {"Name":"kafka"}
### UNIT {"Name":"kafka.service"}</code></pre>
  </div>
</div>

<hr>

{% include footer.erb %}

<script src="{{site.baseurl}}/assets/contrib/jquery.js?t={{site.time}}"></script>
<script src="{{site.baseurl}}/assets/contrib/bootstrap.js?t={{site.time}}"></script>
<script src="{{site.baseurl}}/assets/contrib/highlight.pack.js"></script>
<script src="{{site.baseurl}}/assets/js/site.js?t={{site.time}}"></script>
</body>
</html>
